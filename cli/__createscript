#!/usr/bin/env node

// Internal use only

var fs = require('fs')
var resolve = require('path').resolve
var exists = require('../libs/fs/exists')
var formatDate = require('../libs/lang/formatDate')
var cli = require('../libs/tty/cli')

cli.strict = true

var libsDir = resolve(__dirname, '../libs')
var libs = fs.readdirSync(libsDir)

cli({
  usage: 'createscript { ' + libs.join(', ') + ' }/filename',
  t: '<boolean> create test script only',
  s: '<boolean> create source script only',
  version: '1.0.0',
  epilog: 'Copyright Mora'
}, function (res) {
  if (!res._.length) return this.error('Error: need at lease one file path')

  res._.forEach(make, this)
})

function make (file) {
  var parts = file.replace(/(^\/+|\.js\/*$)/g, '').split('/')
  if (parts.length !== 2) {
    return this.error('Error: illegal file path %s, should only have one slash', file)
  }

  if (libs.indexOf(parts[0]) < 0) {
    return this.error('Error: file path should starts with: ' + libs.join(', '))
  }

  var file = resolve(libsDir, parts[0], parts[1]) + '.js'
  var testFile = resolve(libsDir, parts[0], 'test', '__' + parts[1]) + '.js'

  if (!this.res.t) {
    if (exists(file)) return this.error('Error: file %s already exists', file)
    fs.writeFileSync(file, makeLibsTemplate(parts))
    console.log('Write file %s successfully', file)
  }

  if (!this.res.s && !exists(testFile)) {
    fs.writeFileSync(testFile, makeLibsTestTemplate(parts))
    console.log('Write test file %s successfully', testFile)
  }
}

function makeLibsTestTemplate(parts) {
  return [
    'var assert = require(\'assert\')',
    'var ' + parts[1] + ' = require(\'../' + parts[1] + '\')',
    '',
    '/* eslint-env mocha */',
    '',
    '/* istanbul ignore next/if/else */',
    '',
    'describe(\'libs/' + parts.join('/') + '\', function () {',
    '  it(\'should works\', function () {',
    '  ',
    '  })',
    '})'
  ].join(require('os').EOL)
}

function makeLibsTemplate(parts) {
  return [
    '/**',
    ' * @module      libs/' + parts.join('/'),
    ' * @createdAt   ' + formatDate('yyyy-mm-dd'),
    ' *',
    ' * Copyright (c) ' + formatDate('yyyy') + ' Zhonglei Qiu',
    ' * Licensed under the MIT license.',
    ' */',
    ''
  ].join(require('os').EOL)
}
